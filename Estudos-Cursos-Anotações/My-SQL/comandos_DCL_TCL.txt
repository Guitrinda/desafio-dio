-- parte 1 conceder-grant
-- Criação de um login "ALUNO" e dar pemissões no banco e objetos.

-- concedendo acesso de atualizacao para ALUNO
GRANT UPDATE ON funcionarios TO 'ALUNO'@'localhost';

-- concedendo acesso de update para aluno em todos os objetos
GRANT UPDATE ON *.* TO 'ALUNO'@'localhost';

-- concedendo delete para ALUNO
GRANT DELETE ON funcionarios TO 'ALUNO'@'localhost';

-- concedendo acesso de delete para ALUNO EM TODOS OS OBJETOS
GRANT DELETE ON funcionarios TO 'ALUNO'@'localhost';

-- concedendo acesso de INSERT para ALUNO
GRANT INSERT ON funcionarios TO 'ALUNO'@'localhost';
-- 	delete
--		select	

-- outra forma de sintaxe da concessão de acesso (varias concessções)
GRANT SELECT, INSERT ON funcionarios TO 'ALUNO'@'localhost';

-- sekect com limitação de campos
GRANT SELECT (nome,setor) ON funcionarios TO 'ALUNO'@'localhost';

-- concedendo acesso para executar procedures
GRANT EXECUTE ON PROCEDURE teste.proc_quadrado TO 'ALUNO'@'localhost';

-- concedendo todos os acessos a todos os objetos (de uma determinada tabela)
GRANT ALL PRIVILEGES ON funcionarios TO 'ALUNO'@'localhost';

-- concedendo todos os acessos a todos os objetos (usuario full)
GRANT ALL PRIVILEGES ON * . * TO 'ALUNO'@'localhost';



-- recarregando privilegios
FLUSH PRIVILEGES;

-- visualizar permissões de um usuario
SELECT * FROM mysql.user WHERE USER='ALUNO';

-- nega acessos de atualização para ALUNO
REVOKE UPDATE ON funcionarios FROM 'ALUNO'@'localhost';
REVOKE UPDATE ON *.* FROM 'ALUNO'@'localhost';
REVOKE delete ON funcionarios FROM 'ALUNO'@'localhost';
REVOKE delete ON *.* FROM 'ALUNO'@'localhost';
REVOKE ALL PRIVILEGES ON * . * from 'ALUNO'@'localhost';

-- COMANDOS TCL
-- criando de teste

CREATE TABLE cadastro
(
nome	VARCHAR(50) NOT NULL,
docto	VARCHAR(50) NOT NULL
);

-- inicia transação

  START TRANSACTION;
  
  -- insere registros
  INSERT INTO cadastro VALUES ('Andre','12341244');
   INSERT INTO cadastro VALUES ('Joao','12341248');
    INSERT INTO cadastro VALUES ('Pedro','12341246');
    
 -- retorna a tabela para estado anterior do begin transaction
 ROLLBACK;
 
 -- efetuva as informações na tabelas do banco de dados
 COMMIT;
 
 SELECT * FROM cadastro;   
 
 -- delete from cadastro


-- insere registros (SAVEPOINT)

start TRANSACTION;

 INSERT INTO cadastro VALUES ('Andre','12341244');
 SAVEPOINT P1;
 INSERT INTO cadastro VALUES ('Joao','12341248');
 SAVEPOINT P2;
 INSERT INTO cadastro VALUES ('Pedro','12341246');
 SAVEPOINT P3;
 
 -- retorna a tabela para o estado anterior 
 ROLLBACK TO SAVEPOINT p2;
 
 -- efetiva informações inseridas
 COMMIT;

SELECT * FROM cadastro;

DELETE FROM cadastro;



